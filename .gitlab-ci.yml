variables:
  NAMESPACE_DEV: slides
  OPENSHIFT_SERVER_DEV: https://openshift-dev.cern.ch
  BUILD_ENV_DEV: staging
  APP_NAME: Slides
  DEV_TAG: dev

stages:
  - test
  - build
  - build_docker
  - deploy

.before_npm: &before_npm_def
  before_script:
    - apk add git
    - npm install -g yarn
    - yarn install

test:
  stage: test
  image: node:12-alpine
  <<: *before_npm_def
  script:
    - yarn test a

.build_template: &build_definition
  stage: build
  image: node:12-alpine
  <<: *before_npm_def
  script:
    - npx env-cmd -f .env.${BUILD_ENV} npm run build
  artifacts:
    paths:
      - build

.docker_build_template: &docker_definition
  stage: build_docker
  tags:
    - docker-image-build
  script: "echo building $CI_REGISTRY_IMAGE for users-portal" # No empty scripts are allowed

.deploy_template: &deploy_definition
  stage: deploy
  image: gitlab-registry.cern.ch/paas-tools/openshift-client:latest
  script:
    - LOWERCASE_PATH=$(echo ${CI_PROJECT_PATH} | awk '{ print tolower($0) } ')
    # Adding || true to disable the error message when the image already exists
    - oc import-image ${APP_NAME} --from="gitlab-registry.cern.ch/${LOWERCASE_PATH}:${TAG}" --confirm --token=${TOKEN} --server=${OPENSHIFT_SERVER} -n ${NAMESPACE} || true
    - oc tag "gitlab-registry.cern.ch/${LOWERCASE_PATH}:${TAG}" "${APP_NAME}:latest" --token=${TOKEN} --server=${OPENSHIFT_SERVER} -n ${NAMESPACE}

build_dev:
  <<: *build_definition
  variables:
    BUILD_ENV: ${BUILD_ENV_DEV}
  only:
    - master

build_docker_dev:
  <<: *docker_definition
  variables:
    TO: ${CI_REGISTRY_IMAGE}:${DEV_TAG}
  dependencies:
    - build_dev
  only:
    - master

deploy_dev:
  <<: *deploy_definition
  variables:
    TOKEN: ${OPENSHIFT_DEV_TOKEN}
    OPENSHIFT_SERVER: ${OPENSHIFT_SERVER_DEV}
    NAMESPACE: ${NAMESPACE_DEV}
    TAG: ${DEV_TAG}
  environment:
    name: staging
    url: https://slides.web.cern.ch
  only:
    - master
