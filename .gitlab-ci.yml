variables:
  NAMESPACE_DEV: slides
  BACKEND_NAMESPACE_DEV: slides-backend
  OPENSHIFT_SERVER_DEV: https://openshift.cern.ch
  BUILD_ENV_DEV: staging
  APP_NAME: slides
  DEV_TAG: dev

stages:
  # - test
  # - build
  - build_docker
  - deploy

.before_yarn: &before_yarn_def
  before_script:
    - apk add --update git bash lcms2-dev libpng-dev gcc g++ make autoconf automake npm && rm -rf /var/cache/apk/*
    - npm install -g yarn
    # - yarn install

# test:
#   stage: test
#   image: node:12-alpine
#   <<: *before_yarn_def
#   script:
#     - yarn test a

.docker_build_template: &docker_definition
  stage: build_docker
  <<: *before_yarn_def
  image: 
    # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
    name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
    entrypoint: [""]
  script:
    # Prepare Kaniko configuration file
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # Build and push the image from the Dockerfile at the root of the project.
    # To push to a specific docker tag, amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
    # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/$DOCKER_FILE --destination ${TO}


.deploy_template: &deploy_definition
  stage: deploy
  image: gitlab-registry.cern.ch/paas-tools/openshift-client:latest
  script:
    # Adding || true to disable the error message when the image already exists
    - oc import-image ${APP_NAME} --from="${CI_REGISTRY_IMAGE}/${DEPLOYMENT_TYPE}:${TAG}" --confirm --token=${TOKEN} --server=${OPENSHIFT_SERVER} -n ${NAMESPACE} || true
    - oc tag "${CI_REGISTRY_IMAGE}/${DEPLOYMENT_TYPE}:${TAG}" "${APP_NAME}:latest" --token=${TOKEN} --server=${OPENSHIFT_SERVER} -n ${NAMESPACE}

# build_dev:
#   <<: *build_definition
#   variables:
#     BUILD_ENV: ${BUILD_ENV_DEV}

build_frontend_docker:
  <<: *docker_definition
  script: 
    - "cd ./packages/slides-frontend"
    - "yarn install"
    - "yarn build"
  variables:
    TO: ${CI_REGISTRY_IMAGE}/frontend:${DEV_TAG}
    DOCKER_FILE: ./packages/slides-frontend/Dockerfile
  only:
    - master

build_backend_docker:
  <<: *docker_definition
  variables:
    TO: ${CI_REGISTRY_IMAGE}/backend:${DEV_TAG}
    DOCKER_FILE: ./packages/slides-server/Dockerfile
  only:
    - master
  
deploy_backend:
  <<: *deploy_definition
  variables:
    TOKEN: ${OPENSHIFT_DEV_BACKEND_TOKEN}
    OPENSHIFT_SERVER: ${OPENSHIFT_SERVER_DEV}
    NAMESPACE: ${BACKEND_NAMESPACE_DEV}
    DEPLOYMENT_TYPE: backend
    TAG: ${DEV_TAG}
  environment:
    name: staging
    url: https://slides-backend.web.cern.ch
  only:
    - master


deploy_frontend:
  <<: *deploy_definition
  variables:
    TOKEN: ${OPENSHIFT_DEV_TOKEN}
    OPENSHIFT_SERVER: ${OPENSHIFT_SERVER_DEV}
    NAMESPACE: ${NAMESPACE_DEV}
    DEPLOYMENT_TYPE: frontend
    TAG: ${DEV_TAG}
  environment:
    name: staging
    url: https://slides.web.cern.ch
  only:
    - master
